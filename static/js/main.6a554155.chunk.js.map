{"version":3,"sources":["store/index.ts","store/actionTypes.ts","store/reducers/app.ts","store/reducers/user.ts","styles/fonts.ts","styles/reset.ts","styles/index.ts","pages/Error/index.tsx","pages/Hello/styles.ts","core.ts","components/Textbox/styles.ts","components/Textbox/index.tsx","containers/AuthForm/styles.ts","containers/AuthForm/index.tsx","pages/Hello/index.tsx","routes.tsx","containers/Lang/styles.ts","containers/Lang/index.tsx","containers/Menu/styles.ts","assets/imgs/logo.svg","components/Logo/styles.ts","components/Logo/index.tsx","containers/Menu/index.tsx","containers/Background/styles.ts","components/Video/index.tsx","containers/Background/index.tsx","i18n/locales.ts","i18n/messages.ts","containers/Layout/styles.ts","containers/Layout/index.tsx","App.tsx","index.tsx"],"names":["history","APP_CHANGE_LANG","initialState","lang","appReducer","state","action","type","payload","login","auth","userReducer","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","app","user","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","Fonts","css","Reset","Styles","createGlobalStyle","props","colors","font","background","text","Error","StyledHello","styled","section","timeMessages","StyledTextBox","input","Textbox","value","onChange","placeholder","length","StyledAuthForm","div","AuthForm","useState","setLogin","time","useMemo","setTimeMessage","Number","parseInt","Date","toTimeString","slice","intl","useIntl","formatMessage","id","e","target","Hello","Routes","render","exact","path","StyledLang","Lang","dispatch","useSelector","changeLang","setAppLang","onClick","undefined","StyledMenu","StyledUnAuth","StyledLogo","Logo","src","AssetLogo","alt","UnAuthMessage","Menu","StyledBackground","Video","index","onEnded","autoplay","poster","dir","autoPlay","Background","min","max","Math","round","random","randomNumber","videoIndex","LOCALES","messages","unAuthMessage","morningMessage","dayMessage","eveningMessage","nightMessage","inputPlaceholder","StyledLayout","Layout","children","locale","defaultLocale","App","useDispatch","location","StrictMode","document","body"],"mappings":"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","file":"static/js/main.6a554155.chunk.js","sourcesContent":["import { applyMiddleware, combineReducers, createStore, Store } from \"redux\"\r\nimport { BrowserHistory, createBrowserHistory } from \"history\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport thunk from \"redux-thunk\"\r\nimport {\r\n  connectRouter,\r\n  routerMiddleware,\r\n  RouterState,\r\n} from \"connected-react-router\"\r\n\r\nimport appReducer, { IAppState } from \"./reducers/app\"\r\nimport userReducer, { IUserState } from \"./reducers/user\"\r\n\r\nexport const history: BrowserHistory = createBrowserHistory()\r\n\r\nexport interface IState {\r\n  router: RouterState\r\n  app: IAppState\r\n  user: IUserState\r\n}\r\n\r\nconst rootReducer = (history: BrowserHistory) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    app: appReducer,\r\n    user: userReducer,\r\n  })\r\n\r\nconst store: Store = createStore(\r\n  rootReducer(history),\r\n  composeWithDevTools(applyMiddleware(thunk, routerMiddleware(history)))\r\n)\r\n\r\nexport default store\r\n","export const APP_CHANGE_LANG = \"APP_CHANGE_LANG\"\r\n","import { Action } from \"redux\"\r\nimport { Lang } from \"../../core\"\r\nimport { APP_CHANGE_LANG } from \"../actionTypes\"\r\n\r\nexport interface IAppState {\r\n  lang: Lang\r\n}\r\n\r\nexport interface IAction extends Action {\r\n  payload: {\r\n    [key: string]: any\r\n  }\r\n}\r\n\r\nconst initialState: IAppState = {\r\n  lang: \"en\",\r\n}\r\n\r\nconst appReducer = (state: IAppState = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    case APP_CHANGE_LANG: {\r\n      return {\r\n        ...state,\r\n        lang: action.payload.lang,\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const setAppLang = (lang: Lang) => ({\r\n  type: APP_CHANGE_LANG,\r\n  payload: {\r\n    lang,\r\n  },\r\n})\r\n\r\nexport default appReducer\r\n","import { IAction } from \"./app\"\r\n\r\nexport interface IUserState {\r\n  login: string | null\r\n  auth: boolean\r\n}\r\n\r\nconst initialState: IUserState = {\r\n  login: null,\r\n  auth: false,\r\n}\r\n\r\nconst userReducer = (state: IUserState = initialState, action: IAction) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import { css } from \"styled-components\"\r\n\r\nconst Fonts = css`\r\n  @font-face {\r\n    font-family: Roboto;\r\n    font-weight: 400;\r\n    font-display: swap;\r\n    src: url(\"./fonts/Roboto-Regular.ttf\");\r\n  }\r\n\r\n  @font-face {\r\n    font-family: Roboto;\r\n    font-weight: 500;\r\n    font-display: swap;\r\n    src: url(\"./fonts/Roboto-Medium.ttf\");\r\n  }\r\n\r\n  @font-face {\r\n    font-family: Roboto;\r\n    font-weight: 300;\r\n    font-display: swap;\r\n    src: url(\"./fonts/Roboto-Light.ttf\");\r\n  }\r\n\r\n  @font-face {\r\n    font-family: Roboto;\r\n    font-weight: 200;\r\n    font-display: swap;\r\n    src: url(\"./fonts/Roboto-Thin.ttf\");\r\n  }\r\n`\r\n\r\nexport default Fonts\r\n","import { css } from \"styled-components\"\r\n\r\nconst Reset = css`\r\n  * {\r\n    box-sizing: border-box;\r\n    border: 0;\r\n    outline: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n    font: inherit;\r\n  }\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n\r\n  button {\r\n    padding: 0;\r\n    border: none;\r\n    font: inherit;\r\n    color: inherit;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n\r\n  body {\r\n    height: 100%;\r\n  }\r\n\r\n  input {\r\n    border-radius: 0;\r\n    background: transparent;\r\n    border: none;\r\n    outline: none;\r\n  }\r\n\r\n  input,\r\n  input::placeholder {\r\n    color: var(--color-text);\r\n  }\r\n`\r\n\r\nexport default Reset\r\n","import { createGlobalStyle } from \"styled-components\"\r\n\r\nimport Fonts from \"./fonts\"\r\nimport Reset from \"./reset\"\r\n\r\ninterface IStyles {\r\n  colors?: {\r\n    app?: {\r\n      background?: string\r\n      text?: string\r\n      font?: string\r\n    }\r\n  }\r\n}\r\n\r\nconst Styles = createGlobalStyle<IStyles>`\r\n\t${Fonts}\r\n\t${Reset}\r\n\r\n\t:root {\r\n\t\t--font-app: 'Roboto', sans-serif;\r\n  \t\t--color-background: #2c2c2c;\r\n\t\t--color-text: #ffffff;\r\n\t\t--color-violet: #ed00e7;\r\n\t\t--color-primary: #ff9d9d;\r\n\t\t--color-violet-dark: #b019ad;\r\n\t\t--color-violet-light: #f7c8ff;\r\n\t}\r\n\r\n\thtml {\r\n\t\tfont-family: ${(props) => props.colors?.app?.font || \"var(--font-app)\"};\r\n\t\tbackground: ${(props) =>\r\n      props.colors?.app?.background || \"var(--color-background)\"};\r\n\t\tcolor: ${(props) => props.colors?.app?.text || \"var(--color-text)\"}; \r\n\t\theight: 100%;\r\n\t}\r\n\t\r\n\tbody {\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t\r\n\t::-webkit-scrollbar {\r\n\t\twidth: 7px;\r\n\t\tbackground-color: var(--color-background);\r\n\t}\r\n\r\n\t::-webkit-scrollbar-thumb {\r\n\t\tbackground-color: var(--color-primary);\r\n\t\tborder-radius: 9em;\r\n\t}\r\n`\r\n\r\nexport default Styles\r\n","const Error: React.FC = () => {\r\n  return <section>Error</section>\r\n}\r\n\r\nexport default Error\r\n","import styled from \"styled-components\"\r\n\r\nconst StyledHello = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nexport default StyledHello\r\n","import { Dispatch, ChangeEvent } from \"react\"\r\n\r\nconst timeMessages = {\r\n  m: \"morningMessage\",\r\n  d: \"dayMessage\",\r\n  e: \"eveningMessage\",\r\n  n: \"nightMessage\",\r\n}\r\n\r\nexport type Lang = \"ru\" | \"en\"\r\n\r\nexport interface IProps {\r\n  dispatch?: Dispatch<any>\r\n  location?: any\r\n}\r\n\r\nexport interface IAuthProps extends IProps {\r\n  auth: boolean\r\n}\r\n\r\nexport interface IInput {\r\n  value: string\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nexport const getCurrentHour = () =>\r\n  Number.parseInt(new Date().toTimeString().slice(0, 2))\r\n\r\nexport const setTimeMessage = (time: number) =>\r\n  time >= 4 && time < 12\r\n    ? timeMessages[\"m\"]\r\n    : time >= 12 && time < 17\r\n    ? timeMessages[\"d\"]\r\n    : time >= 17 && time < 0\r\n    ? timeMessages[\"e\"]\r\n    : timeMessages[\"n\"]\r\n","import styled from \"styled-components\"\r\n\r\nconst StyledTextBox = styled.input`\r\n  border-bottom: 1px solid #fff;\r\n  padding: 10px;\r\n\r\n  font-weight: 300;\r\n  font-size: 24px;\r\n\r\n  opacity: 0.5;\r\n  transition: 0.2s;\r\n\r\n  &:focus,\r\n  &[data-valid=\"true\"] {\r\n    opacity: 1;\r\n  }\r\n\r\n  &[data-valid=\"true\"] {\r\n    border-color: var(--color-violet);\r\n  }\r\n`\r\n\r\nexport default StyledTextBox\r\n","import Styled from \"./styles\"\r\n\r\nimport { IInput } from \"../../core\"\r\n\r\nconst Textbox: React.FC<IInput> = (props) => (\r\n  <Styled\r\n    type=\"text\"\r\n    value={props.value}\r\n    onChange={props.onChange}\r\n    placeholder={props.placeholder}\r\n    data-valid={props.value.length > 6 ? true : false}\r\n  />\r\n)\r\n\r\nexport default Textbox\r\n","import styled from \"styled-components\"\r\n\r\nconst StyledAuthForm = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  & > span {\r\n    display: block;\r\n    margin-bottom: 50px;\r\n\r\n    font-weight: 300;\r\n    font-size: 48px;\r\n    text-transform: uppercase;\r\n    text-align: center;\r\n\r\n    color: var(--color-text);\r\n  }\r\n\r\n  & > input[type=\"text\"] {\r\n    width: 80%;\r\n    max-width: 410px;\r\n  }\r\n`\r\n\r\nexport default StyledAuthForm\r\n","import { ChangeEvent, useMemo, useState } from \"react\"\r\nimport { useIntl } from \"react-intl\"\r\nimport { getCurrentHour, setTimeMessage } from \"../../core\"\r\n\r\nimport Textbox from \"../../components/Textbox\"\r\n\r\nimport Styled from \"./styles\"\r\n\r\nconst AuthForm: React.FC = () => {\r\n  const [login, setLogin] = useState(\"\")\r\n  const time = useMemo(() => setTimeMessage(getCurrentHour()), [])\r\n  const intl = useIntl()\r\n\r\n  const loginHandler = (e: ChangeEvent<HTMLInputElement>) =>\r\n    setLogin(e.target.value)\r\n\r\n  return (\r\n    <Styled>\r\n      <span>{intl.formatMessage({ id: time })}</span>\r\n      <Textbox\r\n        value={login}\r\n        onChange={loginHandler}\r\n        placeholder={intl.formatMessage({ id: \"inputPlaceholder\" })}\r\n      />\r\n    </Styled>\r\n  )\r\n}\r\n\r\nexport default AuthForm\r\n","import Styled from \"./styles\"\r\n\r\nimport AuthForm from \"../../containers/AuthForm\"\r\n\r\nconst Hello: React.FC = () => {\r\n  return (\r\n    <Styled>\r\n      <AuthForm />\r\n    </Styled>\r\n  )\r\n}\r\n\r\nexport default Hello\r\n","import { Route, Switch } from \"react-router\"\r\n\r\nimport { IAuthProps } from \"./core\"\r\n\r\nimport Error from \"./pages/Error\"\r\nimport Hello from \"./pages/Hello\"\r\n\r\nconst Routes: React.FC<IAuthProps> = ({ auth }) =>\r\n  auth ? (\r\n    <Switch>\r\n      <Route render={() => <Error />} />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Hello />\r\n      </Route>\r\n      <Route render={() => <Error />} />\r\n    </Switch>\r\n  )\r\n\r\nexport default Routes\r\n","import styled from \"styled-components\"\r\n\r\nconst StyledLang = styled.div`\r\n  position: absolute;\r\n  right: 30px;\r\n  top: 30px;\r\n\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  font-size: 18px;\r\n  text-transform: lowercase;\r\n  user-select: none;\r\n  text-align: center;\r\n\r\n  color: #fff;\r\n  opacity: 0.5;\r\n  transition: 0.3s;\r\n  cursor: pointer;\r\n\r\n  & > span[data-lang] {\r\n    left: 50% !important;\r\n    transform: translate(-50%, -50%) !important;\r\n    opacity: 1;\r\n  }\r\n\r\n  & > span {\r\n    position: absolute;\r\n    transition: 0.4s;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    opacity: 0;\r\n  }\r\n\r\n  & > span:first-child {\r\n    left: -40px;\r\n  }\r\n\r\n  & > span:last-child {\r\n    left: 40px;\r\n  }\r\n\r\n  &:after {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n    content: \"\";\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n    transition: 0.3s;\r\n    border: 1px solid transparent;\r\n    animation: rotate 1.5s infinite linear;\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n\r\n    &:after {\r\n      width: 40px;\r\n      height: 40px;\r\n      opacity: 1;\r\n      border-color: var(--color-violet);\r\n    }\r\n  }\r\n\r\n  @keyframes rotate {\r\n    0% {\r\n      transform: translate(-50%, -50%) rotate(45deg);\r\n      opacity: 1;\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n\r\n    50% {\r\n      transform: translate(-50%, -50%) rotate(135zdeg);\r\n      opacity: 0.5;\r\n      width: 35px;\r\n      height: 35px;\r\n    }\r\n\r\n    100% {\r\n      transform: translate(-50%, -50%) rotate(225deg);\r\n      opacity: 1;\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n  }\r\n`\r\n\r\nexport default StyledLang\r\n","import { useSelector } from \"react-redux\"\r\n\r\nimport Styled from \"./styles\"\r\n\r\nimport { setAppLang } from \"../../store/reducers/app\"\r\nimport { IState } from \"../../store\"\r\nimport { IProps, Lang as LangProps } from \"../../core\"\r\n\r\nconst Lang: React.FC<IProps> = ({ dispatch }) => {\r\n  const lang: LangProps = useSelector((state: IState) => state.app.lang)\r\n\r\n  const changeLang = () =>\r\n    dispatch ? dispatch(setAppLang(lang === \"ru\" ? \"en\" : \"ru\")) : null\r\n\r\n  return (\r\n    <Styled onClick={() => changeLang()}>\r\n      <span data-lang={lang === \"ru\" ? true : undefined}>ru</span>\r\n      <span data-lang={lang === \"en\" ? true : undefined}>en</span>\r\n    </Styled>\r\n  )\r\n}\r\n\r\nexport default Lang\r\n","import styled from \"styled-components\"\r\n\r\nconst StyledMenu = styled.section`\r\n  position: relative;\r\n  padding: 0 30px;\r\n  background: var(--color-background);\r\n\r\n  & > div:first-child {\r\n    margin: 20px 0;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 0;\r\n    padding: 0;\r\n\r\n    & * {\r\n      display: none;\r\n    }\r\n  }\r\n`\r\n\r\nexport const StyledUnAuth = styled.div`\r\n  position: absolute;\r\n  top: 47%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%) rotate(-90deg);\r\n  min-width: 300px;\r\n\r\n  font-weight: 200;\r\n  font-size: 36px;\r\n\r\n  text-transform: lowercase;\r\n  text-align: center;\r\n\r\n  color: var(--color-text);\r\n  opacity: 0.5;\r\n`\r\n\r\nexport default StyledMenu\r\n","export default __webpack_public_path__ + \"static/media/logo.4ebc195d.svg\";","import styled from \"styled-components\"\r\n\r\nconst StyledLogo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nexport default StyledLogo\r\n","import AssetLogo from \"../../assets/imgs/logo.svg\"\r\n\r\nimport Styled from \"./styles\"\r\n\r\nconst Logo: React.FC = () => (\r\n  <Styled>\r\n    <img src={AssetLogo} alt=\"Casla Logo\" />\r\n  </Styled>\r\n)\r\n\r\nexport default Logo\r\n","import { FormattedMessage } from \"react-intl\"\r\n\r\nimport Styled, { StyledUnAuth } from \"./styles\"\r\n\r\nimport Logo from \"../../components/Logo\"\r\n\r\nimport { IAuthProps } from \"../../core\"\r\n\r\nconst UnAuthMessage = () => (\r\n  <StyledUnAuth>\r\n    <FormattedMessage id={\"unAuthMessage\"} />\r\n  </StyledUnAuth>\r\n)\r\n\r\nconst Menu: React.FC<IAuthProps> = ({ auth }) => (\r\n  <Styled>\r\n    <Logo />\r\n    {!auth && <UnAuthMessage />}\r\n  </Styled>\r\n)\r\n\r\nexport default Menu\r\n","import styled from \"styled-components\"\r\n\r\nconst StyledBackground = styled.div`\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  z-index: -1;\r\n\r\n  &,\r\n  & > video {\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n\r\n  & > video {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  @media (min-aspect-ratio: 16/9) {\r\n    & > video {\r\n      height: 200%;\r\n      top: -50%;\r\n    }\r\n  }\r\n\r\n  @media (max-aspect-ratio: 16/9) {\r\n    & > video {\r\n      width: 200%;\r\n      left: -50%;\r\n    }\r\n  }\r\n\r\n  @supports (object-fit: cover) {\r\n    & > video {\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n    }\r\n  }\r\n`\r\n\r\nexport default StyledBackground\r\n","interface IVideo {\r\n  index: number\r\n  dir?: string\r\n  poster?: string\r\n  autoplay?: boolean\r\n  onEnded?: (e: any) => void\r\n}\r\n\r\nconst defaultPoster = \"/media/img/poster.png\"\r\nconst defaultDir = \"/media/bg/\"\r\n\r\nconst Video: React.FC<IVideo> = ({\r\n  index,\r\n  onEnded,\r\n  autoplay = true,\r\n  poster = defaultPoster,\r\n  dir = defaultDir,\r\n}) => (\r\n  <video autoPlay={autoplay} poster={poster} onEnded={onEnded}>\r\n    <source\r\n      src={`${dir}${index}/${index}.mp4`}\r\n      type='video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\r\n    />\r\n  </video>\r\n)\r\n\r\nexport default Video\r\n","import { useState } from \"react\"\r\n\r\nimport StyledBackground from \"./styles\"\r\n\r\nimport Video from \"../../components/Video\"\r\n\r\nconst VideoMaxIndex = 5\r\n\r\nconst randomNumber = (min: number = 1, max: number = VideoMaxIndex): number =>\r\n  Math.round(min - 0.5 + Math.random() * (max - min + 1))\r\n\r\nconst Background: React.FC = () => {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  const [videoIndex, setVideoIndex] = useState<number>(randomNumber())\r\n  // const [videoHistory, setVideoHistory] = useState<number[]>([videoIndex])\r\n\r\n  // Смена видео послео кончания\r\n\r\n  // const onVideoEnded = (e: any) => {\r\n  //   generateVideoIndex()\r\n  //   e.target.load()\r\n  // }\r\n\r\n  // const generateVideoIndex = (\r\n  //   maxIndex: number = VideoMaxIndex,\r\n  //   minIndex: number = 1\r\n  // ): void => {\r\n  // let isSuccessGenerate = false\r\n  // let history = videoHistory.length < maxIndex ? videoHistory : []\r\n  //let newIndex = randomNumber(minIndex, maxIndex)\r\n\r\n  // while (!isSuccessGenerate) {\r\n  //   newIndex = randomNumber(minIndex, maxIndex)\r\n\r\n  //   if (history.indexOf(newIndex) === -1) {\r\n  //     history.push(newIndex)\r\n  //     isSuccessGenerate = true\r\n  //   }\r\n  // }\r\n\r\n  //   setVideoIndex(newIndex)\r\n  //   // setVideoHistory(history)\r\n  // }\r\n\r\n  return (\r\n    <StyledBackground>\r\n      <Video index={videoIndex} />\r\n    </StyledBackground>\r\n  )\r\n}\r\n\r\nexport default Background\r\n","export const LOCALES = {\r\n  ENGLISH: \"en\",\r\n  RUSSIAN: \"ru\",\r\n}\r\n","import { LOCALES } from \"./locales\"\r\n\r\nconst messages = {\r\n  [LOCALES.ENGLISH]: {\r\n    // Menu\r\n\r\n    unAuthMessage: \"Hi, stranger\",\r\n\r\n    // Auth Page\r\n\r\n    morningMessage: \"Good morning. Who are you?\",\r\n    dayMessage: \"Good day. Who are you?\",\r\n    eveningMessage: \"Good evening. Who are you?\",\r\n    nightMessage: \"Good night. Who are you?\",\r\n    inputPlaceholder: \"I`m a...\",\r\n  },\r\n  [LOCALES.RUSSIAN]: {\r\n    // Menu\r\n\r\n    unAuthMessage: \"Привет, странник\",\r\n\r\n    // Auth Page\r\n\r\n    morningMessage: \"Доброе утро. Кто ты?\",\r\n    dayMessage: \"Привет. Кто ты?\",\r\n    eveningMessage: \"Добрый вечер. Кто ты?\",\r\n    nightMessage: \"Доброй ночи. Кто ты?\",\r\n    inputPlaceholder: \"Я...\",\r\n  },\r\n}\r\n\r\nexport default messages\r\n","import styled from \"styled-components\"\r\n\r\nconst StyledLayout = styled.div`\r\n  display: grid;\r\n  grid-template-columns: minmax(max-content, max-content) 5fr;\r\n  height: 100vh;\r\n\r\n  & > section,\r\n  & > main,\r\n  & > main > div,\r\n  & > main > section {\r\n    height: inherit;\r\n  }\r\n\r\n  & > main > section {\r\n    overflow-y: auto;\r\n    padding: 0 30px;\r\n  }\r\n\r\n  & > main,\r\n  & > main > section {\r\n    position: relative;\r\n  }\r\n\r\n  & > main > div {\r\n    position: absolute;\r\n    z-index: -2;\r\n  }\r\n\r\n  & > main > div:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background: #000;\r\n    opacity: 0.2;\r\n    z-index: 0;\r\n  }\r\n`\r\n\r\nexport default StyledLayout\r\n","import { IntlProvider } from \"react-intl\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nimport { IAuthProps } from \"../../core\"\r\nimport { IState } from \"../../store\"\r\n\r\nimport Lang from \"../Lang\"\r\nimport Menu from \"../Menu\"\r\nimport Background from \"../Background\"\r\n\r\nimport messages from \"../../i18n/messages\"\r\nimport { LOCALES } from \"../../i18n/locales\"\r\n\r\nimport Styled from \"./styles\"\r\n\r\nconst Layout: React.FC<IAuthProps> = ({ children, dispatch, auth }) => {\r\n  const lang = useSelector((state: IState) => state.app.lang)\r\n\r\n  return (\r\n    <IntlProvider\r\n      messages={messages[lang]}\r\n      locale={lang}\r\n      defaultLocale={LOCALES.ENGLISH}\r\n    >\r\n      <Styled>\r\n        <Menu auth={auth} />\r\n        <main>\r\n          {children}\r\n          <Background />\r\n        </main>\r\n        <Lang dispatch={dispatch} />\r\n      </Styled>\r\n    </IntlProvider>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport { ConnectedRouter } from \"connected-react-router\"\r\n\r\nimport { history, IState } from \"./store\"\r\n\r\nimport Styles from \"./styles\"\r\nimport Routes from \"./routes\"\r\n\r\nimport Layout from \"./containers/Layout\"\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const location = useSelector((state: IState) => state.router.location)\r\n  const auth = useSelector((state: IState) => state.user.auth)\r\n\r\n  return (\r\n    <ConnectedRouter history={history}>\r\n      <Styles />\r\n      <Layout dispatch={dispatch} location={location} auth={auth}>\r\n        <Routes auth={auth} />\r\n      </Layout>\r\n    </ConnectedRouter>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport { render } from \"react-dom\"\r\nimport { Provider } from \"react-redux\"\r\n\r\nimport App from \"./App\"\r\nimport store from \"./store\"\r\n\r\nrender(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.body\r\n)\r\n"],"sourceRoot":""}